{
  "fieldGroupClassName": "form-card grid",
  "fieldGroup": [
    {
      "className": "form-card-title",
      "template": "Satisfies"
    },
    {
      "className": "form-card-field",
      "key": "evaluationType",
      "type": "select",
      "templateOptions": {
        "label": "Alert will prompt if",
        "placeholder": "Alert will prompt if"
      },
      "expressionProperties": {
        "templateOptions.options": "formState.fieldOptions.evaluationType"
      }
    },
    {
      "className": "form-card-field",
      "key": "entityType2",
      "type": "select",
      "templateOptions": {
        "label": "Entity Type",
        "placeholder": "Entity Type",
        "required": true
      },
      "expressionProperties": {
        "templateOptions.options": "formState.fieldOptions.entityType.filter(o => !!model.entityType && o.matchValue?.indexOf(model.entityType) > -1)",
        "model.entityType2": "field.templateOptions.options.find(o => o.value === model.entityType2) ? model.entityType2 : null"
      },
      "hideExpression": "model.evaluationType === 'CURRENT'",
      "resetOnHide": true
    },
    {
      "className": "form-card-field",
      "key": "entityTypeIds2",
      "type": "select",
      "templateOptions": {
        "required": true,
        "multiple": true
      },
      "expressionProperties": {
        "templateOptions.label": "'Which ' + formState.entityTypeDictionary[model.entityType2] + ' type'",
        "templateOptions.placeholder": "'Which ' + formState.entityTypeDictionary[model.entityType2] + ' type'",
        "templateOptions.options": "formState.fieldOptions.entityTypeIds.filter(o => o.matchValue === model.entityType2)"
      },
      "hideExpression": "model.evaluationType === 'CURRENT' || !model.entityType2",
      "resetOnHide": true
    },
    {
      "className": "form-card-field",
      "key": "clear",
      "type": "clear",
      "templateOptions": {
        "keyOfFieldToClear": "entityType2"
      },
      "hideExpression": "!model.evaluationType",
      "resetOnHide": true
    },
    {
      "className": "form-card-field grid-row-3",
      "fieldGroup": [
        {
          "key": "attachment",
          "type": "repeat",
          "templateOptions": {
            "addText": "Add Attachment Type"
          },
          "fieldArray": {
            "fieldGroupClassName": "grid",
            "fieldGroup": [
              {
                "className": "form-card-field toggle grid-row-1",
                "key": "criterion",
                "type": "radio",
                "templateOptions": {
                  "options": [
                    { "value": "and", "label": "And" },
                    { "value": "or", "label": "Or" }
                  ]
                },
                "defaultValue": "and"
              },
              {
                "className": "form-card-field grid-row-2",
                "key": "entityType",
                "type": "select",
                "templateOptions": {
                  "label": "Entity Type",
                  "placeholder": "Entity Type",
                  "required": true
                },
                "expressionProperties": {
                  "templateOptions.options": "formState.fieldOptions.entityType.filter(o => o.value !== 'PROJECT_TYPE' && o.value !== field.parent.parent.parent.model.entityType)"
                }
              },
              {
                "className": "form-card-field",
                "key": "entityTypeIds",
                "type": "select",
                "templateOptions": {
                  "required": true,
                  "multiple": true
                },
                "expressionProperties": {
                  "templateOptions.label": "'Which ' + formState.entityTypeDictionary[model.entityType] + ' type'",
                  "templateOptions.placeholder": "'Which ' + formState.entityTypeDictionary[model.entityType] + ' type'",
                  "templateOptions.options": "formState.fieldOptions.entityTypeIds.filter(o => o.matchValue === model.entityType)"
                },
                "hideExpression": "model.evaluationType === 'CURRENT' || !model.entityType",
                "resetOnHide": true
              },
              {
                "className": "form-card-field grid-row-3 grid-col-2",
                "fieldGroup": [
                  {
                    "key": "specifics",
                    "type": "repeat",
                    "templateOptions": {
                      "addFirstText": "Set Specific Fields",
                      "addText": "Add Field"
                    }
                  }
                ],
                "hideExpression": "!(model.entityTypeIds?.length > 0)",
                "resetOnHide": true
              }
            ]
          }
        }
      ],
      "hideExpression": "!(model.entityTypeIds2?.length > 0) && (model.evaluationType === 'CURRENT' || model.evaluationType === 'LINKED')",
      "resetOnHide": true
    }
  ]
}
