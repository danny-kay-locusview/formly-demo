{
  "fieldGroupClassName": "form-card grid",
  "fieldGroup": [
    {
      "className": "form-card-title",
      "template": "When Entity"
    },
    {
      "className": "form-card-field",
      "key": "entityType",
      "type": "select",
      "templateOptions": {
        "label": "Alert applies on",
        "placeholder": "Alert applies on",
        "required": true
      },
      "expressionProperties": {
        "templateOptions.options": "formState.fieldOptions.entityType.filter(o => (model.projectTypeIds?.length > 0) && (!o.matchValue || model.projectTypeIds?.length === o.matchValue))",
        "model.entityType": "field.templateOptions.options.find(o => o.value === model.entityType) ? model.entityType : null"
      }
    },
    {
      "className": "form-card-field",
      "key": "entityTypeIds",
      "type": "select",
      "templateOptions": {
        "required": true,
        "multiple": true
      },
      "expressionProperties": {
        "templateOptions.label": "'Which ' + model.entityType + ' type'",
        "templateOptions.placeholder": "'Which ' + model.entityType + ' type'",
        "templateOptions.options": "formState.fieldOptions.entityTypeIds.filter(o => o.matchValue === model.entityType)"
      },
      "hideExpression": "!model.entityType || model.entityType === 'PROJECT_TYPE'",
      "resetOnHide": true
    },
    {
      "className": "form-card-field",
      "key": "clear",
      "type": "clear",
      "templateOptions": {
        "keyOfFieldToClear": "entityType"
      },
      "hideExpression": "!model.entityType",
      "resetOnHide": true
    },
    {
      "className": "form-card-field grid-row-3 grid-col-2",
      "fieldGroup": [
        {
          "key": "definition",
          "type": "repeat",
          "templateOptions": {
            "addFirstText": "Set Specific Fields",
            "addText": "Add Field"
          },
          "fieldArray": {
            "fieldGroupClassName": "grid",
            "fieldGroup": [
              {
                "className": "form-card-field toggle grid-row-1",
                "key": "criterion",
                "type": "radio",
                "templateOptions": {
                  "options": [
                    { "value": "and", "label": "And" },
                    { "value": "or", "label": "Or" }
                  ]
                },
                "defaultValue": "and",
                "hideExpression": "field.parent.index === 0",
                "resetOnHide": true
              },
              {
                "className": "form-card-field grid-row-2",
                "key": "fieldKey",
                "type": "select",
                "templateOptions": {
                  "label": "Field",
                  "placeholder": "Field",
                  "required": true
                },
                "expressionProperties": {
                  "templateOptions.options": "formState.fieldOptions.fieldKey.filter(o => !!o.matchValue.some(mv => !mv.entityTypeIds && mv.entityType === field.parent.parent.parent.model.entityType))",
                  "model.fieldKey": "field.templateOptions.options.find(o => o.value === model.fieldKey) ? model.fieldKey : null"
                }
              },
              {
                "className": "form-card-field grid-row-2",
                "key": "operator",
                "type": "select",
                "templateOptions": {
                  "label": "Was filled out with",
                  "placeholder": "Was filled out with",
                  "required": true
                },
                "expressionProperties": {
                  "templateOptions.options": "formState.fieldOptions.operator",
                  "model.operator": "field.templateOptions.options.find(o => o.value === model.operator) ? model.operator : null"
                },
                "hideExpression": "!model.fieldKey",
                "resetOnHide": true
              },
              {
                "className": "form-card-field grid-row-2",
                "key": "values",
                "type": "select",
                "templateOptions": {
                  "label": "Specific value",
                  "placeholder": "Specific value",
                  "multiple": true
                },
                "expressionProperties": {
                  "templateOptions.options": "formState.fieldOptions.values.filter(o => model.operator === 'ANY' && o.matchValue.indexOf(model.fieldKey) > -1)"
                },
                "hideExpression": "model.operator !== 'ANY'",
                "resetOnHide": true
              },
              {
                "className": "form-card-field grid-row-2",
                "key": "min",
                "type": "input",
                "templateOptions": {
                  "label": "Min value",
                  "placeholder": "Min value"
                },
                "hideExpression": "!(model.operator?.indexOf('RANGE') > -1)",
                "resetOnHide": true
              },
              {
                "className": "form-card-field grid-row-2",
                "key": "max",
                "type": "input",
                "templateOptions": {
                  "label": "Min value",
                  "placeholder": "Min value"
                },
                "hideExpression": "!(model.operator?.indexOf('RANGE') > -1)",
                "resetOnHide": true
              }
            ]
          }
        }
      ],
      "hideExpression": "model.entityType !== 'PROJECT_TYPE' && !(model.entityTypeIds?.length > 0)",
      "resetOnHide": true
    }
  ]
}
